#!/usr/bin/env bash

OPTS=$(getopt -ao 'r' -l 'refresh' -- "$@")

[[ $? != 0 ]] && exit 1

eval set -- "$OPTS"
unset OPTS

REFRESH=false

while true; do
	case "${1}" in
		-r|--refresh)
			REFRESH=true
			shift
			;;
		--)
			shift
			break
			;;
		*)
			exit 1
			;;
	esac
done

RED='^c#d20f39^'
YLW='^c#df8e1d^'
GRN='^c#40a02b^'
NC='^c#cdd6f4^'

bt() {
	if ! command -v acpi &> /dev/null; then
		printf "%s%d%s" "BT $RED-" 127 "-$NC"
		return
	fi

	CAP=$(acpi | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,')

	PRE="u"
	[[ "$(acpi)" =~ ([dD]ischarging)+ ]] || PRE="c"

	if [[ $CAP -ge 50 ]]; then
		PRE="$GRN$PRE$NC"
	elif [[ $CAP -ge 30 ]]; then
		PRE="$YLW$PRE$NC"
	else
		PRE="$RED$PRE$NC"
	fi

	printf "%s" "BT $PRE$CAP%"
}

brt() {
	if ! command -v brightnessctl &> /dev/null || ! command -v calc &> /dev/null; then
		printf "%s%d%s" "BR $RED-" 127 "-$NC"
		return
	fi

	BRT=$(calc -d "100 * $(brightnessctl get) / $(brightnessctl max)")

	printf "BR %.0f%%" "$BRT"
}

net() {
	NET=$(ip -br a | grep -E '^(wl|enp).*(UP|UNKNOWN).*[[:digit:]]' | awk '{print $1}')

	if [[ "$NET" == *enp* ]]; then
		ST="$YLW-cable-$NC"
	elif [[ "$NET" == *wl* ]]; then
		ST="$YLW-wl-$NC"
	else
		ST="$RED-down-$NC"
	fi

	printf "%s" "NET $ST"
}

vol() {
	if ! command -v pactl &> /dev/null; then
		printf "%s%d%s" "VL $RED-" 127 "-$NC"
		return
	fi

	MUTE=$(pactl get-sink-mute 0)
	VOL=$(pactl get-sink-volume 0 | grep -i 'volume' | awk '{print $5}')

	PRE="u"
	if [[ "$MUTE" == *yes* ]]; then
		PRE="${RED}m$NC"
	elif [[ $VOL -eq 0 ]]; then
		PRE="$YLW$PRE$NC"
	else
		PRE="$GRN$PRE$NC"
	fi

	if test -z "$VOL"; then
		printf "%s" "VL $YLW-loading-$NC"
		return
	fi

	printf "%s" "VL $PRE$VOL"
}

if [[ $REFRESH == false ]]; then
	echo -n "$NC $(vol) | $(brt) | $(bt) | $(net) | $(date '+%b %d %a %R ')" | tr -d '\n'
else
	PID=$(tr -d '\n' < "$DWM_SLEEP_PID")
	test -n "$PID" && kill -9 "$PID"
fi

exit 0
