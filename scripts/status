#!/usr/bin/env bash

OPTS=$(getopt -ao 'r' -l 'refresh' -- "$@")

[[ $? != 0 ]] && exit 1

eval set -- "$OPTS"
unset OPTS

REFRESH=false

while true; do
	case "${1}" in
		-r|--refresh)
			REFRESH=true
			shift
			;;
		--)
			shift
			break
			;;
		*)
			break
			;;
	esac
done

RED='^c#d20f39^'
YLW='^c#df8e1d^'
GRN='^c#40a02b^'
NC='^c#cdd6f4^'

bt() {
	CAP=$(cat /sys/class/power_supply/BAT0/capacity)
	ST=$(cat /sys/class/power_supply/BAT0/status)

	PRE="u"
	[[ "$ST" = "Charging" ]] && PRE="c"

	if [[ $CAP -ge 50 ]]; then
		PRE="$GRN$PRE$NC"
	elif [[ $CAP -ge 30 ]]; then
		PRE="$YLW$PRE$NC"
	else
		PRE="$RED$PRE$NC"
	fi

	printf "%s" "BT $PRE$CAP%"
}

brt() {
	BRT=$(calc -d "100 * $(brightnessctl get) / $(brightnessctl max)")
	BRT=$(printf "%.0f" "$(echo "scale=2;${BRT}" | bc)")

	printf "%s" "BR $BRT%"
}

net() {
	NET=$(ip -brief address | \
		grep -E '^(wl|enp).*(UP|UNKNOWN).*d+' | \
		awk '{print $1}')

	if [[ "$NET" == *enp* ]]; then
		ST="$YLW-cable-$NC"
	elif [[ "$NET" == *wl* ]]; then
		ST="$YLW-wl-$NC"
	else
		ST="$RED-down-$NC"
	fi

	printf "%s" "NET $ST"
}

vol() {
	MUTE=$(pactl get-sink-mute @DEFAULT_SINK@)
	VOL=$(pactl get-sink-volume @DEFAULT_SINK@ \
		| grep "Volume:" | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,' )

	PRE="u"
	if [[ "$MUTE" == *yes* ]]; then
		PRE="${RED}m$NC"
	elif [[ $VOL -eq 0 ]]; then
		PRE="$YLW$PRE$NC"
	else
		PRE="$GRN$PRE$NC"
	fi

	if test -z "$VOL"; then
		printf "%s" "VL $YLW-loading-$NC"
		return
	fi

	printf "%s" "VL $PRE$VOL%"
}

if [[ $REFRESH == false ]]; then
	echo -n "$NC $(vol) | $(brt) | $(bt) | $(net) | $(date '+%b %d %a %R ')"
else
	PID=$(tr -d '\n' < "$DWM_SLEEP_PID")
	test -n "$PID" && kill -9 "$PID"
fi
