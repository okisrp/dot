#!/usr/bin/env bash

OPTS="$( getopt -ao "r" -l "refresh" -- "${@}" )"

[[ "${?}" != 0 ]] && exit 1

eval set -- "${OPTS}"
unset OPTS

REFRESH=false

while true; do
	case "${1}" in
		"-r" | "--refresh" )
			REFRESH=true
			shift
			;;
		"--" )
			shift
			break
			;;
		* )
			break
			;;
	esac
done

RED="^c#d20f39^"
YLW="^c#df8e1d^"
GRN="^c#40a02b^"
NC="^c#cdd6f4^"

bt() {
	CAP="$(cat /sys/class/power_supply/BAT0/capacity)"
	STAT="$(cat /sys/class/power_supply/BAT0/status)"

	PREFIX="u"
	[[ "${STAT}" = "Charging" ]] && PREFIX="c"

	if (( $CAP >= 60 )); then
		PREFIX="${GRN}${PREFIX}${NC}"
	elif (( $CAP >= 30 )); then
		PREFIX="${YLW}${PREFIX}${NC}"
	else
		PREFIX="${RED}${PREFIX}${NC}"
	fi

	printf "%s %s%%" "BT" "${PREFIX}${CAP}"
}

brt() {
	BRT="$( calc -d "100 * $( brightnessctl get ) / $( brightnessctl max )" )"
	BRT="$( printf "%.0f" "$( echo "scale=2;${BRT}" | bc )" )"

	printf "%s %s%%" "BR" "${BRT}"
}

net() {
	NET=$(ip -brief address | \
		grep -E '^(wl|enp).*(UP|UNKNOWN).*d+' | \
		awk '{print $1}')

	if [[ "$NET" == *enp* ]]; then
		ST="$YLW-cable-$NC"
	elif [[ "$NET" == *wl* ]]; then
		ST="$YLW-wl-$NC"
	else
		ST="$RED-down-$NC"
	fi

	printf "%s" "NET $ST"
}

vol() {
	MUTE="$( pactl get-sink-mute @DEFAULT_SINK@ )"
	VOL="$( pactl get-sink-volume @DEFAULT_SINK@ \
		| grep "Volume:" | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,' )"

	PREFIX="u"
	if [[ "${MUTE}" = "Mute: yes" ]]; then
		PREFIX="${RED}m${NC}"
	elif [[ "${VOL}" = "0" ]]; then
		PREFIX="${YLW}${PREFIX}${NC}"
	else
		PREFIX="${GRN}${PREFIX}${NC}"
	fi

	if test -z "${VOL}"; then
		printf "%s %s" "VL" "${YLW}-loading-${NC}"
		return
	fi

	printf "%s %s%%" "VL" "${PREFIX}${VOL}"
}

if [[ "${REFRESH}" = false ]]; then
	echo -n "${NC} $(vol) | $(brt) | $(bt) | $(net) | $(date '+%b %d %a %R') "
else
	PID="$( cat "${DWM_SLEEP_PID}" | tr -d '\n' )"
	test -n "${PID}" && kill -KILL "${PID}"
fi
